<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>面试总结</title>
      <link href="/2025/03/30/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
      <url>/2025/03/30/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<h1 id="面试总结"><a href="#面试总结" class="headerlink" title="面试总结"></a>面试总结</h1><h2 id="面试经历"><a href="#面试经历" class="headerlink" title="面试经历"></a>面试经历</h2><div class="table-container"><table><thead><tr><th>公司</th><th>流程</th><th>描述</th></tr></thead><tbody><tr><td>蚂蚁</td><td>简历挂</td><td></td></tr><tr><td>方田教育</td><td>一面挂</td><td></td></tr><tr><td>浙江玉皇山南投资</td><td>一面挂</td><td>项目和学历要求不达标</td></tr><tr><td>成谷科技</td><td>笔试一挂</td><td>考的全是C，或者我看不懂的408</td></tr></tbody></table></div><h2 id="面试离谱题目"><a href="#面试离谱题目" class="headerlink" title="面试离谱题目"></a>面试离谱题目</h2><h3 id="1：有-2n-个人排队进电影院，票价是-50-美分。在这-2n-个人当中，其中-n-个人只有-1-美元（纸币），另外-n-个人有-50-美分（硬币）。电影院开始卖票时-1-分钱也没有，每个拥有-1-美元买票时，电影院都有-50-美分找钱。"><a href="#1：有-2n-个人排队进电影院，票价是-50-美分。在这-2n-个人当中，其中-n-个人只有-1-美元（纸币），另外-n-个人有-50-美分（硬币）。电影院开始卖票时-1-分钱也没有，每个拥有-1-美元买票时，电影院都有-50-美分找钱。" class="headerlink" title="1：有(2n)个人排队进电影院，票价是 50 美分。在这(2n)个人当中，其中(n)个人只有 1 美元（纸币），另外(n)个人有 50 美分（硬币）。电影院开始卖票时 1 分钱也没有，每个拥有 1 美元买票时，电影院都有 50 美分找钱。"></a>1：有(2n)个人排队进电影院，票价是 50 美分。在这(2n)个人当中，其中(n)个人只有 1 美元（纸币），另外(n)个人有 50 美分（硬币）。电影院开始卖票时 1 分钱也没有，每个拥有 1 美元买票时，电影院都有 50 美分找钱。</h3><p>链接：<a href="https://www.nowcoder.com/questionTerminal/f828fa8288334bbf84e34ed3a52ea64d">https://www.nowcoder.com/questionTerminal/f828fa8288334bbf84e34ed3a52ea64d</a><br>来源：牛客网</p><p>这是著名的卡特兰数列。<br>我们先不考虑人与人的差别，比如先把排队“甲乙”和“乙甲”看做等同的（这样做是为了简化问题，便于理解。最后结果要再乘以人的排列数）<br>我们可以把拿50美分的人看做1，拿1美元的人看做0，这些排队者的组合就是01的排列<br>这里需要满足从第一个数开始的任意连续子序列中，0的个数不多于1的个数，也就是排队者从前往后数任意长度的队列中，拿100美分的人数不能多于拿50美分的人数（否则找不开零钱）<br>假设我们不考虑这个限制条件，那么全部的01排列共有C（2n,n）种，也就是一半0一半1的情况<br>现在我们再把其中不符合要求的数量去掉<br>在任何不符合条件的序列中，找出使得0的个数超过1的个数的第一个0的位置，然后在导致并包括这个0的部分序列中，以1代替所有的0并以0代表所有的1。结果总的序列变成一个有(n+1)个1和(n-1)个0的序列。而且这个过程是可逆的，也就是说任何一个有(n+1)个1和(n-1)个0构成的序列都能反推出一个不符合条件的序列，所以不符合条件的序列个数为C（2n,n-1）<br>因此总的符合条件的组合数为C(2n,n)-C(2n,n-1)<br>然后再考虑人的差异，n个拿50美分的人和n个拿1美元的人各有A(n,n)中排列<br>因此最终结果为(C(2n,n)-C(2n,n-1))<em>A(n,n)</em>A(n,n)</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Reliability-Based G1 Continuous Arc Spline Approximation</title>
      <link href="/2025/03/24/Reliability-Based-G1-Continuous-Arc-Spline-Approximation/"/>
      <url>/2025/03/24/Reliability-Based-G1-Continuous-Arc-Spline-Approximation/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>本文介绍了一种利用G1 连续弧对一组数据点进行近似的算法,并利用与点相关联的协方差数据。</p><p>以往的弧样条近似方法通常假设所有数据点的贡献相等,<br>这在存在异常值时可能导致算法不稳定。<br>为解</p><p>决这一挑战,我们提出了一种鲁棒的弧样条近似方法,考虑了每个数据点的二维协方差。我们从单弧近</p><p>似的模型和参数定义开始,并将框架扩展到多弧近似以提高适用性。最后,我们使用合成噪声数据和韩</p><p>国世宗市车辆实验收集的真实数据验证了所提出的算法。</p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1 介绍"></a>1 介绍</h2><p>为了分析点数据的几何形状或使用不同曲线族平滑点序列,已经开发了多种方法。这些技术在</p><p>数控(NC)加工、曲线重建和道路车道数据参数化等领域有应用。其中,使用弧进行数据近似因其</p><p>简单性和平移/旋转不变性而脱颖而出。</p><h2 id="1-1-文献综述和问题陈述"><a href="#1-1-文献综述和问题陈述" class="headerlink" title="1.1 文献综述和问题陈述"></a>1.1 文献综述和问题陈述</h2><p>在双弧近似方面已经开展了大量研究。例如,在Song 等人的研究中,通过双弧插值将数据点</p><p>参数化为多个弧段,避免了约束优化的需要。然而,这种方法存在局限性。当数据点接近直线时,</p><p>长度参数变得极小,导致高斯步骤计算中出现近奇异问题。此外,Song 等人的方法在每4 个数据</p><p>点分配一个弧段,未能有效实现紧凑的数据表示。</p><p>图1: 3 Points are set as parameters (optimization variables) to define a single arc.</p><p>1<br>一些研究由于数据噪声而遇到算法不稳定的问题。虽然RANSAC 是一种常用的去除异常值或</p><p>噪声点的方法,但它存在不足:没有时间限制用于稳健回归,也不能保证完全去除异常值。其他方</p><p>法定义了数据点的横向偏移作为容差通道。这些研究生成的弧样条被限制在容差通道内,但假设数</p><p>据准确(低噪声水平)<br>。此外,由于容差通道对所有数据点应用了相等的横向偏移,噪声可能会显著</p><p>影响算法的性能和稳定性。</p><h2 id="1-2-我们的方法"><a href="#1-2-我们的方法" class="headerlink" title="1.2 我们的方法"></a>1.2 我们的方法</h2><p>我们的目标是以紧凑且鲁棒的方式解决噪声数据的弧样条近似问题。为了克服现有方法的局限</p><p>性,我们强调在近似过程中每个数据点的不同重要性。通过引入每个数据点的二维协方差信息,我</p><p>们设计了一个反映这一概念的优化问题。本文的结构如下:第2 节详细介绍了单弧近似的方法,包</p><p>括参数定义和代价函数建模。我们使用合成数据和真实数据集评估这种方法。在第3 节中,我们将</p><p>单弧模型扩展到多弧近似框架。从弧参数初始化、优化的代价函数到验证/更新过程将被讨论。接</p><p>下来,在第4 节中,我们展示了使用生成数据和真实数据对多弧近似框架的评估。最后,第5 节探</p><p>讨了潜在的应用和未来研究方向。</p><h2 id="1-3-主要贡献"><a href="#1-3-主要贡献" class="headerlink" title="1.3 主要贡献"></a>1.3 主要贡献</h2><p>Our main contributions are as follows:</p><p>• 单弧近似的代价函数/约束模型<br>• 多弧近似的弧参数初始化<br>• 多弧近似的代价函数/约束模型<br>• 多弧近似的弧参数验证/更新</p><h2 id="2-单弧近似"><a href="#2-单弧近似" class="headerlink" title="2 单弧近似"></a>2 单弧近似</h2><p>本节讨论单弧近似的算法。我们定义了弧参数,并引入了新的代价函数和约束模型,这些模型</p><p>将被修改后用于多弧近似。</p><h2 id="2-1-单弧的参数"><a href="#2-1-单弧的参数" class="headerlink" title="2.1 单弧的参数"></a>2.1 单弧的参数</h2><p>为了确保非线性优化问题的稳定性和准确性,优化变量的数值尺度应尽可能接近。因此,我们</p><p>用三个点定义一个弧,如图1 所示。这些点——两个红色点表示弧节点,一个蓝色点表示中间节点</p><p>——具有相似的数值尺度。通过优化它们的位置,我们旨在为给定的数据点和协方差找到最佳拟合</p><p>弧。</p><h2 id="2-2-优化模型"><a href="#2-2-优化模型" class="headerlink" title="2.2 优化模型"></a>2.2 优化模型</h2><p>为了使用弧参数(图1)准确近似数据点,需要一个设计良好的代价函数。本节介绍了构成单</p><p>弧近似完整代价函数的三个模型。</p><p>2</p><h2 id="2-2-1-单弧锚点模型"><a href="#2-2-1-单弧锚点模型" class="headerlink" title="2.2.1 单弧锚点模型"></a>2.2.1 单弧锚点模型</h2><p>第一个代价函数模型,即锚点模型,通过将弧节点与第一和最后的数据点对齐来稳定优化,如</p><p>图2 所示。假设数据点是有序的,它将第一和第二个弧节点分别与第一和最后的数据点匹配。模型</p><p>的代价计算为匹配点之间加权欧几里得距离的平方和,可以写为如下形式:</p><p>其中,P1 和Pn 是数据集中的第一和最后的点,A1 和A2 分别表示第一和第二个弧节点。符号</p><p>∥· ∥2<br>Σ = (·)⊤Σ−1(·) 表示平方马氏距离,可以视为加权欧几里得距离的平方。权重通过将协方差矩</p><p>阵ΣAC 的逆矩阵额外乘以原始残差向量P1 −A1 和P2 −A2 的平方2 范数来反映在代价中,如公</p><p>式(1)所示。</p><p>锚点模型的代价可以通过调整协方差矩阵ΣAC 来影响优化过程,如公式(1)所示。例如,从</p><p>单位矩阵开始设置ΣAC1(图3 中的案例1)<br>,将其对角线元素增加到100(案例2)<br>,由于公式(1)</p><p>中的逆关系,代价会减少一个<br>1</p><p>100 的因子。这种调整允许节点在不显著增加代价的情况下,远离匹</p><p>配的数据点。值得注意的是,中间节点(在图2 中标记为N1)被排除在锚点模型的代价之外,这</p><p>确保了其在优化过程中的灵活性,这对于准确确定弧的半径至关重要。</p><p>图2: 单弧近似的锚点模型:弧节点(A1, A2) 与第一和最后的数据点(P1, Pn) 对齐。</p><p>图3: 锚点模型展示两种不同锚点协方差的情况。</p><h2 id="2-2-2-单弧测量模型"><a href="#2-2-2-单弧测量模型" class="headerlink" title="2.2.2 单弧测量模型"></a>2.2.2 单弧测量模型</h2><p>第二个代价函数模型,即弧测量模型,通过调整中间节点的位置来最小化数据点与弧近似之间</p><p>的差异,从而优化弧的形状。</p><p>3<br>代价计算弧测量模型代价的计算过程如下。请参考图4 以获得图形理解:</p><ol><li>通过两个弧节点和中间节点的位置,利用简单的几何关系计算弧心的位置XC。</li><li>设置循环变量i,从1 迭代到n(数据点数量)<br>。例如,选择点Pi 进行说明。</li><li>找到线段PiXC 与弧A1N1A2 的交点,并将该点设为虚拟点Pv<br>i 。</li><li>定义弧测量模型残差ri<br>ME 为数据点Pi 与虚拟点Pv<br>i 之间的差值:ri<br>ME = Pv<br>i −Pi。</li><li>使用预先计算的数据点Pi 的协方差矩阵Σi<br>ME 对残差ri<br>ME 进行加权(平方马氏距离)<br>。</li><li>重复步骤3 到5,对整个数据集进行迭代(i 从1 到n)<br>。弧测量模型将所有计算出的代价相<br>加。</li></ol><p>图4: 单弧近似的弧测量模型:残差通过计算数据点P 和匹配的虚拟点Pv i 之间的差值获得。</p><p>上述弧测量残差的代数表达式为:</p><p>其中,rest(估计的弧半径)和Xc 是通过两个弧节点和中间节点计算得到的。最后,利用每个数据</p><p>点Pi 的残差ri ME,我们可以计算弧测量模型的代价函数,如下所示:</p><p>由于虚拟点Pv i 是从A1、A2、N1 和点Pi 推导而来的,因此我们可以将残差ri ME 表示为A1、A2、</p><p>N1 和点Pi 的函数(如公式3 所示)<br>。这里再次使用平方马氏距离对每个残差进行加权,协方差矩</p><p>阵为Σi ME。此外,需要注意的是,所有数据点都有不同的协方差矩阵Σi ME,因此弧将被优化,以</p><p>便进一步减少具有更高可靠性的数据点的近似误差。</p><p>4<br>2.2.3<br>单弧等式约束1:中间节点<br>代价函数中包含的最后一个模型是一个等式约束,它限制了优化变量A1、A2 和N1 的相对位</p><p>置。除了代表弧的两端的两个弧节点外,我们还将弧的中点设置为一个弧参数(优化变量)<br>。中间节</p><p>点N1 应位于线段A1A2 的垂直平分线上。这可以通过计算向量A1A2 和MN1(如图4 所示)的</p><p>内积,并将其结果设为零来实现。</p><p>在优化过程中,等式约束(公式4)将与拉格朗日乘数一起添加到原始代价函数中。</p><p>2.3<br>单弧近似:增强代价函数与优化<br>综合上述提出的代价函数模型和等式约束模型,我们可以将优化问题重新表述如下:</p><p>公式(5)是带有等式约束的最终代价函数,优化变量为两个弧节点A1、A2 和中间节点N1。此类</p><p>优化问题可以归类为典型的约束非线性最小二乘(CNLS)优化问题。需要注意的是,可以通过调</p><p>整锚点模型的协方差矩阵ΣAC 来平衡代价函数(公式5)<br>。</p><p>2.3.1<br>非线性最小二乘(NLS)问题的典型求解方法<br>在求解带约束的非线性最小二乘问题之前,我们先简要介绍如何求解无约束的非线性最小二乘</p><p>问题。</p><p>无约束非线性最小二乘设f : Rn 7→Rm 是一个向量函数,且m ≥n。主要目标是最小化∥f∥,</p><p>或者等价地求解</p><p>其中</p><p>关于如何求解无约束非线性最小二乘问题的高斯-牛顿方法的详细推导,可参考文献[11]。在每次迭</p><p>代优化中,优化变量(向量)x 的更新公式为</p><p>上述公式描述了在第k 次迭代中变量的更新方式。其中,α 是步长,在经典的高斯-牛顿方法中取</p><p>值为1。对于其他高级方法,通常会使用各种线搜索方法来确定α 的值。除了高斯-牛顿方法外,莱</p><p>文贝格-马夸尔特方法和鲍威尔的狗腿法也是求解一般无约束非线性最小二乘问题时最常用的方法。</p><p>这三种算法的核心区别在于如何计算更新向量h。</p><p>5</p><h2 id="2-3-2-约束非线性最小二乘-Cnls-问题的求解"><a href="#2-3-2-约束非线性最小二乘-Cnls-问题的求解" class="headerlink" title="2.3.2 约束非线性最小二乘(Cnls)问题的求解"></a>2.3.2 约束非线性最小二乘(Cnls)问题的求解</h2><p>在上述介绍的NLS 问题中加入等式或不等式约束,就形成了CNLS 问题。求解CNLS 问题需</p><p>要使用诸如障碍/惩罚法、BFGS 拟牛顿法和拉格朗日乘数法等高级技术。</p><p>回到我们最初提出的问题(公式5)<br>,单弧近似的优化变量是两个弧节点A1、A2 和中间节点</p><p>N1。这些弧参数被组合成一个列向量x,并在CNLS 求解器中进行迭代更新。公式(5)所示的</p><p>CNLS 问题的最优解是通过MATLAB 优化工具箱中的’lsqnonlin.m’函数获得的[21]。</p><h2 id="2-4-单弧近似的示例"><a href="#2-4-单弧近似的示例" class="headerlink" title="2.4 单弧近似的示例"></a>2.4 单弧近似的示例</h2><p>在进入多弧近似之前,我们使用生成的数据点和协方差测试所提出的单弧近似。在数据生成过</p><p>程中,向弧上的真实点添加了白高斯噪声。每个数据点的协方差矩阵Σi ME 被设置为具有从12 到</p><p>302 的随机对角元素。此外,锚点模型的协方差在整个论文中被设置为具有0.012 的对角元素。</p><p>从图5 可以看出,具有不同协方差的噪声数据点以及异常值点(假设异常值具有较大的协方差</p><p>值502 到2002,可靠性较低)能够很好地拟合到单个弧中。除了生成的数据外,单弧近似还使用了</p><p>真实世界的数据点进行测试。图6 中的数据点是通过融合车辆轨迹和车道检测结果计算得出的,测</p><p>试地点位于韩国世宗市。</p><h2 id="图5-单弧近似示例1-包含异常值的生成数据点-。"><a href="#图5-单弧近似示例1-包含异常值的生成数据点-。" class="headerlink" title="图5: 单弧近似示例1(包含异常值的生成数据点) 。"></a>图5: 单弧近似示例1(包含异常值的生成数据点) 。</h2><p>关于如何获取数据点协方差的详细过程在文献[7] 中有介绍。尽管对于案例(a)<br>,单弧近似似</p><p>乎是可以接受的,但对于案例(b)<br>、<br>(c)和(d)<br>,仅使用一个弧进行数据近似显然是不够的。为了</p><p>克服单弧近似的局限性,基于可靠性的多弧近似将在第3 节中介绍。</p><h2 id="3-多弧近似"><a href="#3-多弧近似" class="headerlink" title="3 多弧近似"></a>3 多弧近似</h2><p>在本节中,我们将单弧近似的概念扩展到多弧近似。虽然这个想法看起来很直接,但还有几个</p><p>关键因素需要考虑,如下所示:</p><p>• 应初始化弧段的参数以实现稳定的收敛。<br>• 相邻弧段的弧节点会重叠。<br>• 需要进行(数据点-弧段)匹配以进行优化。<br>6<br>图6: 单弧近似示例2(来自韩国世宗市车辆实验的真实数据点)<br>。</p><p>• 所有弧段都应满足G1 连续性。<br>• 需要对弧参数进行验证的过程。<br>• 需要确定何时结束近似的过程。<br>多弧近似框架将按照上述所有论点进行设计。将解释修改后的代价函数/约束条件,并在真实</p><p>世界收集的数据点和协方差上测试所提出的框架。</p><h2 id="3-1-多弧近似框架"><a href="#3-1-多弧近似框架" class="headerlink" title="3.1 多弧近似框架"></a>3.1 多弧近似框架</h2><p>多弧近似的整体框架如图7 所示。数据近似过程可以分为两个阶段。</p><p>图7: 多弧近似框架:<br>(阶段1)初始化弧参数,<br>(阶段2)获得满足近似误差条件的弧参数集合。<br>在第一阶段,确定初始的弧段数量,并利用第2 节中讨论的单弧近似方法初始化相应的弧参数</p><p>(弧节点和中间节点)<br>。初始化的目的是获得足够高质量的初始参数值,以避免在第二阶段优化过程</p><p>中出现发散。</p><p>在第二阶段,基于几个成本函数和约束模型执行约束非线性最小二乘(CNLS)优化。单弧近</p><p>似和多弧近似之间的主要区别直接出现在弧参数优化之后。单弧近似在优化后立即结束,而多弧近</p><p>似框架则使用弧近似误差和每个数据点的协方差进行额外的弧参数验证。如果当前弧参数集(弧节</p><p>点和中间节点)在验证过程后被认为是可接受的,则优化结束。否则,弧段数量增加一个,并重复</p><p>参数优化步骤,直到所有弧段都有效。</p><p>7</p><h2 id="3-2-多弧近似第一阶段-参数初始化"><a href="#3-2-多弧近似第一阶段-参数初始化" class="headerlink" title="3.2 多弧近似第一阶段:参数初始化"></a>3.2 多弧近似第一阶段:参数初始化</h2><p>在第一阶段:参数初始化步骤中,计算所需的初始弧段数量。利用这些信息,分别使用第2 节</p><p>中提出的单弧近似方法初始化弧参数。</p><h2 id="3-2-1-数据点的递归线性近似"><a href="#3-2-1-数据点的递归线性近似" class="headerlink" title="3.2.1 数据点的递归线性近似"></a>3.2.1 数据点的递归线性近似</h2><p>为了确定近似数据点所需的初始弧段数量,<br>需要了解给定点的大致形状。<br>假设这些点是有序的,</p><p>我们执行递归线性化,将数据点近似为折线(即多条连接的直线)<br>。这里,我们实现了分治算法来进</p><p>行递归数据点线性化。算法的简要说明如下。假设总共有n 个数据点:</p><ol><li>将初始感兴趣区间设置为[1, n]。</li><li>用一条直线连接第一个索引和最后一个索引的数据点。</li><li>找到线性拟合误差最大的点的索引(Idx)<br>。</li><li>检查最大误差是否高于阈值(是/否)<br>。</li><li>(a) (是)将区间划分为[1, Idx],[Idx, n] 并从步骤2 开始重复。<br>(b) (否)返回当前区间(将被传播回去)<br>。</li></ol><h2 id="图8-递归线性化的示例-在样本数据点上进行测试-从-A-到-D-。"><a href="#图8-递归线性化的示例-在样本数据点上进行测试-从-A-到-D-。" class="headerlink" title="图8: 递归线性化的示例:在样本数据点上进行测试(从(A) 到(D)) 。"></a>图8: 递归线性化的示例:在样本数据点上进行测试(从(A) 到(D)) 。</h2><p>递归线性近似的结果如图8 所示。通过递归线性近似,可以得到用于分段线性近似的数据点区</p><p>间。由于这些线性近似区间包含了给定数据点的大致形状,我们现在可以确定初始的弧段数量(即</p><p>创建初始优化变量所需的弧节点和中间节点的数量)<br>。</p><h2 id="3-2-2-确定初始弧段数量"><a href="#3-2-2-确定初始弧段数量" class="headerlink" title="3.2.2 确定初始弧段数量"></a>3.2.2 确定初始弧段数量</h2><p>为了确定初始的弧段数量,我们迭代地合并之前获得的线性近似区间,并评估单弧近似的有效</p><p>性(在第3.4 节中解释)<br>。这一过程如图9 所示,使用垂直线标记线性近似区间的边界,其中lb 和</p><p>ub 分别表示数据的下界和上界。最初,在步骤(a) 中,位于lb 和ub 之间的数据点形成一条直线。</p><p>通过将中间节点(N1) 放在两个弧节点(A1, A2) 的中点附近,我们的单弧近似创建了一个类似直线</p><p>的弧段,确保了初始区间[<em>lb, ub</em>] 的近似有效性。随后,在步骤(b) 中,上界ub 沿线性近似区间的</p><p>8<br>边界递增,直到单弧近似对于位于lb 和ub 之间的数据点无效。当这种情况发生时,ub 返回到最近</p><p>一次有效的边界索引。在步骤(c) 中,从lb 到ub 的线性近似区间被合并,表明这些数据点将在初</p><p>始化阶段被拟合为一个弧段。重复步骤(b) 到(c),直到ub 达到最后一个数据点。这一迭代过程计</p><p>算了表示给定数据点所需的初始弧段数量和初始弧近似区间。这种方法通过避免固定初始化为单个</p><p>弧段,防止了算法的低效性。</p><h2 id="图9-合并线性近似区间以进行单弧近似"><a href="#图9-合并线性近似区间以进行单弧近似" class="headerlink" title="图9: 合并线性近似区间以进行单弧近似"></a>图9: 合并线性近似区间以进行单弧近似</h2><h2 id="3-2-3-多弧参数初始化"><a href="#3-2-3-多弧参数初始化" class="headerlink" title="3.2.3 多弧参数初始化"></a>3.2.3 多弧参数初始化</h2><p>在获得多弧近似的初始区间后,我们通过单弧近似为每个弧段初始化弧参数(弧节点和中间节</p><p>点)<br>。对于相邻的弧段,重叠的弧节点通过分配一个公共弧节点来解决。该公共节点的位置通过取</p><p>重叠节点位置的平均值来确定。例如,图10 展示了这一点,其中初始化了3 个弧节点(2 个原始</p><p>节点,1 个公共节点)和2 个中间节点作为优化变量。随后,这些参数将在第二阶段根据多弧近似</p><p>的成本/约束模型进行优化。</p><h2 id="3-3-多弧近似第二阶段-参数优化"><a href="#3-3-多弧近似第二阶段-参数优化" class="headerlink" title="3.3 多弧近似第二阶段:参数优化"></a>3.3 多弧近似第二阶段:参数优化</h2><p>进入多弧近似框架的第二阶段,如图7 所示,第一阶段初始化的弧参数将通过修改后的成本函</p><p>数模型和约束条件进行优化,并使用弧近似误差和每个数据点的协方差矩阵进行验证。如果所有弧</p><p>段在评估后都是可接受的,则优化循环结束。另一方面,如果存在无效的弧段,则弧段数量增加一</p><p>个,并重复优化循环。这里需要注意的是,在弧参数优化过程中(图7 中第二阶段左上角的模块)<br>,</p><p>弧段数量是固定的。在成本函数模型方面,对第2 节中引入的原始成本函数模型和平等约束进行了</p><p>轻微修改。此外,由于多弧近似框架的特性,还增加了两个约束模型。</p><h2 id="3-3-1-数据关联"><a href="#3-3-1-数据关联" class="headerlink" title="3.3.1 数据关联"></a>3.3.1 数据关联</h2><p>在进入成本函数和约束模型的解释之前,<br>我们首先处理数据关联,<br>即匹配数据点和弧段的过程。</p><p>与单弧近似不同<br>(单弧近似中所有数据点都匹配到一个弧上)<br>,<br>在多弧近似过程中,<br>数据点和多个弧</p><p>段之间的匹配关系可能会变得模糊。因此,对于一个特定的弧段,我们需要在数据关联步骤中决定</p><p>9<br>图10: 多弧参数初始化:为了将两个弧视为一组弧参数,公共弧节点(绿色点)被定义为两个弧共</p><p>享。</p><p>哪些数据点将被匹配到该弧段。例如,在图11 中,由于有3 个弧段,我们需要在数据关联过程中</p><p>将数据点分为3 组。假设数据点是有序的,可以通过使用最接近弧节点的数据点的索引(记为Idx)</p><p>快速完成数据关联。对于起始弧节点(A1) 和结束弧节点(A4),分别使用第一个和最后一个数据点</p><p>(索引号1 和n)<br>。因此,如图11 所示,索引在Idx(1)(=1)和Idx(2) 之间的数据点被链接到第一</p><p>个弧段。其余两个弧段也是如此。除了前面提到的例子外,相同的逻辑可以应用于不同弧段数量的</p><p>各种情况。</p><p>图11: 3 个弧的数据关联:(1) 找到每个弧节点最近的数据点(标记为绿色)<br>。(2) 索引在Idx(i) 到</p><p>Idx(i+1) 之间的数据点被匹配到弧段号i。<br>例如, PIdx1 和PIdx2 之间的点被匹配到第一个弧段。<br>(3)</p><p>在每次优化迭代后,优化变量A1,A2 等会更新。随后,从步骤(1) 到步骤(2) 的关联过程将重新</p><p>进行。</p><p>数据关联的结果将用于扩展的成本函数和约束模型。需要注意的是,数据关联的匹配结果可能</p><p>会对近似性能产生关键影响,<br>尤其是在弧测量模型中。<br>使用错误的数据点进行近似会导致收敛失败、</p><p>不稳定和较大的近似误差。</p><p>数据关联的注释在阶段2 的参数优化步骤中,多个弧节点和中间节点的位置会在每次优化迭代</p><p>中发生变化。由于数据关联是基于弧节点的位置进行的,因此在每次优化迭代之后都需要重新执行</p><p>数据关联。</p><h2 id="3-3-2-锚点模型"><a href="#3-3-2-锚点模型" class="headerlink" title="3.3.2 锚点模型"></a>3.3.2 锚点模型</h2><p>多弧近似的锚点模型结构与单弧近似相同:弧节点与匹配数据点之间的位置差异通过协方差矩</p><p>阵加权。方程(9) 中的前两项分别将第一个和最后一个弧节点固定到第一个和最后一个数据点,而</p><p>其余项则通过数据关联找到的对应数据点锚定其余弧节点。<br>为了确保稳定性,<br>较小的协方差值ΣAC1</p><p>10<br>限制初始和最终弧节点,而较大的协方差值ΣAC2 被分配给其余弧节点,以适应优化过程中的潜在</p><p>变化,使它们能够更自由地探索解空间。对于m 个弧段,产生m + 1 个弧节点,锚点模型的成本</p><p>函数表示为:</p><p>在方程(9) 中, P 表示数据点向量, Idx(i) 表示从数据关联中获得的数据点索引。<br>具体来说, Idx(1) = 1</p><p>和Idx(m + 1) = n,其中n 是数据点的总数。</p><h2 id="3-3-3-弧测量模型"><a href="#3-3-3-弧测量模型" class="headerlink" title="3.3.3 弧测量模型"></a>3.3.3 弧测量模型</h2><p>在多弧近似的弧测量模型中,单弧近似中推导出的方程(3) 将多次计算多个弧。一般来说,对</p><p>于弧段i,<br>弧测量模型成本是针对索引为Idx(i) 到Idx(i+1) 的数据点计算的,<br>使用弧节点Ai, Ai+1<br>和中间节点Ni。多弧的弧测量模型成本如下所示:</p><p>在方程(10) 中,注意协方差矩阵Σj ME 是为每个数据点唯一定义的(预先计算)<br>。</p><h2 id="3-3-4-等式约束1-中间节点"><a href="#3-3-4-等式约束1-中间节点" class="headerlink" title="3.3.4 等式约束1:中间节点"></a>3.3.4 等式约束1:中间节点</h2><p>将单弧近似中引入的等式约束(2.2.3)扩展以适应多个弧段,我们在多弧框架的每个段中计算</p><p>方程(4)。具体来说,对于段i,涉及弧节点Ai,Ai+1 和中间节点Ni,中间节点等式约束公式如下:</p><p>在这里,大小为Rm 的rEq1 在参数优化过程中被约束为零向量。</p><p>3.3.5<br>等式约束2:G1 连续性<br>当存在多个弧段时,确保每对相邻弧段之间具有G1 连续性是必要的。图12 展示了两个相邻</p><p>弧段之间没有G1 连续性。为了实现这些段之间的G1 连续性,必须满足以下条件:</p><p>•<br>(蓝色向量之间的正交性)弧段2 在A2 处的切向量与向量Xc1A2 正交。<br>•<br>(绿色向量之间的正交性)弧段1 在A2 处的切向量与向量Xc2A2 正交。<br>然而,由于满足这两个条件中的任何一个都会自动导致另一个条件的满足,我们选择通过强制</p><p>蓝色向量之间的正交性来确保G1 连续性。将图12 中介绍的情况扩展,如果我们考虑第i 个和第</p><p>(i + 1) 个弧段之间的G1 连续性约束,弧节点Ai、Ai+1 和Ai+2 分别对应于图12 中的A1、A2 和</p><p>A3。然后,上述条件可以表示如下:</p><p>在方程中,(v)x 和(v)y 分别表示向量v 的x 和y 分量。内积v⊤<br>b1vb2 表示蓝色向量之间的正交性。</p><p>对于m 个弧段,等式约束残差向量rEq2 在优化过程中被约束为零向量,其大小为Rm−1。</p><p>11<br>图12: G1 连续性的不等式约束:真实弧长用橙色线的长度近似。AiNi + NiAi+1 ≥Lmin 被设置为</p><p>不等式约束。</p><h2 id="3-3-6-不等式约束1-最小弧长"><a href="#3-3-6-不等式约束1-最小弧长" class="headerlink" title="3.3.6 不等式约束1:最小弧长"></a>3.3.6 不等式约束1:最小弧长</h2><p>最终的约束模型强制弧段的最小长度为Lmin。<br>该模型旨在防止弧段退化为一个点<br>(即两个弧节</p><p>点和中间节点收敛到同一点)<br>,这会在优化过程中导致奇异性问题。例如,在图13 中,如果我们使</p><p>用Ai、Ai+1 和Ni 计算段i 的真实弧长,其值将非常非线性。将真实弧长设置为大于Lmin 会导致</p><p>CNLS 求解器变慢,甚至在极端情况下失败。解决这个问题的一种方法是找到一个简单的弧长近似</p><p>值。一种方法是通过求和AiNi 和NiAi+1 的长度来近似弧长,如图13 所示。注意,从几何学上讲,</p><p>真实弧长总是大于两个线段AiNi 和NiAi+1 长度之和。<br>因此,<br>如果我们设置∥Ai−Ni∥+∥Ni−Ai+1∥</p><p>大于Lmin,真实弧长将被约束为大于Lmin 的值。大小为Rm 的不等式约束残差向量表示如下:</p><p>上述不等式针对所有弧段(从i = 1 到m)进行计算。在执行优化时,不等式约束残差向量r<em>InEq</em>1<br>被约束为小于或等于零向量。</p><p>图13: 最小弧长的不等式约束:真实弧长用橙色线的长度近似。AiNi + NiAi+1 ≥Lmin 被设置为不</p><p>等式约束。</p><p>12</p><h2 id="3-3-7-多弧近似-扩展的成本函数和约束条件"><a href="#3-3-7-多弧近似-扩展的成本函数和约束条件" class="headerlink" title="3.3.7 多弧近似:扩展的成本函数和约束条件"></a>3.3.7 多弧近似:扩展的成本函数和约束条件</h2><p>将成本函数模型和平等/不等式约束模型合并后,我们得到了完整的CNLS 问题结构。假设我</p><p>们有m 个弧段,扩展的成本函数可以写成如下形式:</p><p>与单弧优化类似,可以通过调整协方差矩阵ΣAC1 和ΣAC2 来平衡成本函数。将初始化的弧节点和</p><p>中间节点(在3.2 节中计算)作为CNLS 求解器的输入,输出将是优化后的弧节点和中间节点的</p><p>位置。方程(14) 中给出的CNLS 问题通过MATLAB 优化工具箱中的’lsqnonlin.m’实现的内点法</p><p>(Coleman 和Li,1996)求解。获得最优解的数学过程与第2.3 节中提供的解释相同。</p><h2 id="3-4-多弧近似第二阶段-参数验证"><a href="#3-4-多弧近似第二阶段-参数验证" class="headerlink" title="3.4 多弧近似第二阶段:参数验证"></a>3.4 多弧近似第二阶段:参数验证</h2><p>尽管许多曲线拟合/近似算法使用简单的均方根误差(RMSE)来评估近似效果,但在给定数据</p><p>点的协方差矩阵的情况下,单纯使用RMSE 值是不恰当的。在我们的研究中,而不是使用RMSE,</p><p>我们对所有数据点进行卡方<br>(χ2)<br>检验<br>(Pearson,<br>1900)<br>,<br>以确定每个弧段的弧近似是否可接受。<br>弧</p><p>段的验证步骤如下:</p><ol><li>对于一个弧段,从数据关联过程中获取匹配的数据点索引。</li><li>计算每个数据点的弧测量残差<br>(第2.2.2 节)<br>。<br>对于弧段i 和点索引j,<br>计算rME(Ai, Ai+1, Ni, Pj)。</li><li>使用第2 步中的残差计算平方马氏距离,并测试该值是否大于卡方检验阈值(较大/较小)<br>。</li><li>(a) (较大)弧近似对于数据点Pj 无效。<br>(b) (较小)弧近似对于数据点Pj 有效。</li><li>如果无效弧近似的总数超过阈值N,则对应的弧段被视为无效。<br>通常,卡方检验阈值选择99% 的置信水平。这意味着只有当弧近似位于99% 置信椭圆(使用</li></ol><p>协方差矩阵绘制)之外时,才认为弧近似无效,如图14 所示。最终,为了评估近似弧段的有效性,</p><p>我们统计每个弧段的无效数据点近似数量(第5 步)<br>。如果无效数据点近似的总数超过了阈值N</p><p>(一个调整变量)<br>,当前弧段就被认为是无效的。需要注意的是,N 的值需要仔细调整。如果N 设</p><p>置过高,可能会接受具有较大近似误差的弧段。相反,如果N 设置过低,可能需要更多的弧段来</p><p>准确近似数据点。</p><h2 id="3-5-多弧近似第二阶段-参数更新"><a href="#3-5-多弧近似第二阶段-参数更新" class="headerlink" title="3.5 多弧近似第二阶段:参数更新"></a>3.5 多弧近似第二阶段:参数更新</h2><p>如果在参数验证(3.4 节)步骤之后存在任何无效的弧段,则执行参数更新步骤。我们通过将</p><p>无效数据点近似数量最多的弧段一分为二来增加弧段的数量,如图15 所示。原始的弧节点和中间</p><p>13<br>图14: 弧近似的卡方检验:(a) 在置信椭圆内:有效近似;(b) 在置信椭圆外:无效近似。</p><p>节点用于生成新生成的弧段的弧节点和中间节点,而不改变成本函数的值。从图15-(b) 中更新的初</p><p>始参数开始,然后对n + 1 个弧段进行优化。需要注意的是,由于锚点协方差值较低,最初一分为</p><p>二的两个弧段将在优化步骤中适当调整。因此,仅仅将无效段一分为二不会导致稳定性问题。</p><p>图15: 参数更新过程:(a) 优化n 个弧段后,第i 个段是最无效的段(绿色虚线)<br>。(b) 将第i 个弧</p><p>段一分为二,为优化n + 1 个弧段创建初始参数值。</p><h2 id="3-6-所提框架迭代收敛的简单证明"><a href="#3-6-所提框架迭代收敛的简单证明" class="headerlink" title="3.6 所提框架迭代收敛的简单证明"></a>3.6 所提框架迭代收敛的简单证明</h2><p>基于参数更新过程,<br>我们可以证明我们的框架能够确保弧参数迭代收敛到局部最小值。<br>设Xf n =</p><p>[A1, . . . , An+1, N1<em>, . . . ,</em> Nn] 表示使用n 个弧段优化后的弧参数, Xo n+1 = [˜<br>A1<em>, . . . ,</em> ˜<br>An+2, ˜<br>N1<em>, . . . ,</em> ˜<br>Nn+1]</p><p>表示在使用n + 1 个弧段优化之前的弧参数。那么图15-(a) 中的参数是Xf n,图15-(b) 中的参数是</p><p>Xo n+1。尽管Xo n+1 包含了一个额外的弧段,但由于几何形状保持一致,扩展的成本函数L(Xo n+1) 与</p><p>L(Xf n) 保持一致,如图15 所示。如果在增加弧段数量后可以进一步降低成本,CNLS 求解器(第</p><p>3.3.7 节)将调整节点位置,逐渐接近局部最小值。值得注意的是,CNLS 求解器只接受能够降低成</p><p>14<br>本函数L 的更新。<br>迭代过程中成本函数值的关系如下:</p><p>由于成本函数值随着弧段数量的增加而单调递减,我们证明了我们的多弧近似框架的迭代收敛性。</p><h2 id="4-数值算例与对比"><a href="#4-数值算例与对比" class="headerlink" title="4 数值算例与对比"></a>4 数值算例与对比</h2><p>将参数初始化(第3.2 节)<br>、优化(第3.3 节)<br>、验证(第3.4 节)和更新(第3.5 节)四个模块</p><p>整合到多弧框架(图7)中,我们使用两种类型的数据集来评估其性能。我们首先使用多个带噪声</p><p>的生成数据点集进行评估。随后,该框架在韩国世宗市的测试驾驶中收集的真实车道数据上进行了</p><p>测试(Jeon,2023)<br>。</p><h2 id="4-1-生成带噪声数据点的多弧近似"><a href="#4-1-生成带噪声数据点的多弧近似" class="headerlink" title="4.1 生成带噪声数据点的多弧近似"></a>4.1 生成带噪声数据点的多弧近似</h2><p>我们首先使用各种生成的数据点(包括平滑的以及包含离群点或尖锐几何形状的数据集)来评</p><p>估我们的框架,如图16 所示。值得注意的是,我们观察到使用小半径的弧段可以有效地处理尖锐</p><p>的角落。此外,低可靠性的离群点被忽略,而不会影响近似性能。</p><p>图16: 多种数据的多弧近似:(a) 两条垂直线被近似为三个弧段。(b) (a) 中的尖锐角落通过使用小</p><p>半径的弧段进行近似。(c) 锯齿线(含离群点)和(d) 螺旋曲线分别被近似为7 个和10 个弧段。</p><h2 id="4-2-真实世界收集数据点的多弧近似"><a href="#4-2-真实世界收集数据点的多弧近似" class="headerlink" title="4.2 真实世界收集数据点的多弧近似"></a>4.2 真实世界收集数据点的多弧近似</h2><p>多弧优化框架被应用于单弧优化中的相同示例。图17 展示了使用两个或多个有效弧段对所有</p><p>数据点进行优化的过程。值得注意的是,实现较低的均方根误差(RMSE)并不总是意味着更好的</p><p>近似效果,因为它可能会伴随着更多的无效卡方检验样本。使用预先计算的协方差矩阵对所有数据</p><p>点进行评估,这被认为比仅依赖每个弧段的RMSE 更为合理。</p><h2 id="4-3-多弧近似应用-车道地图参数化"><a href="#4-3-多弧近似应用-车道地图参数化" class="headerlink" title="4.3 多弧近似应用:车道地图参数化"></a>4.3 多弧近似应用:车道地图参数化</h2><p>最后,我们介绍了韩国世宗市车辆行程的左车道和右车道的多弧近似结果。之前在单弧优化和</p><p>多弧优化中介绍的真实世界示例(图6 和图17)部分采样自整个行程。在图18 中,左/右车道数据</p><p>15</p><h2 id="图17-多弧优化示例1-与图6-相同的数据点"><a href="#图17-多弧优化示例1-与图6-相同的数据点" class="headerlink" title="图17: 多弧优化示例1(与图6 相同的数据点)"></a>图17: 多弧优化示例1(与图6 相同的数据点)</h2><p>点和弧节点被一起绘制,但分别优化。总共将1152 个数据点参数化为每个左/右车道的多个弧段。</p><p>多弧近似结果的总结列于表1。</p><h2 id="图18-多弧优化示例2-车辆行程的全部数据点-。"><a href="#图18-多弧优化示例2-车辆行程的全部数据点-。" class="headerlink" title="图18: 多弧优化示例2(车辆行程的全部数据点) 。"></a>图18: 多弧优化示例2(车辆行程的全部数据点) 。</h2><p>方向<br>总弧段长度<br>总弧段数量</p><p>左<br>1185.10 m<br>27</p><p>右<br>1163.73 m<br>23</p><h2 id="表1-左-右车道弧参数化的总结"><a href="#表1-左-右车道弧参数化的总结" class="headerlink" title="表1: 左/右车道弧参数化的总结"></a>表1: 左/右车道弧参数化的总结</h2><h2 id="4-4-对比"><a href="#4-4-对比" class="headerlink" title="4.4 对比"></a>4.4 对比</h2><p>为了在能够处理带噪声和离群点的数据点的方法之间进行有意义的比较,我们选择了Song 等</p><p>人(2009)提出的近似算法。由于本文的主要关注点是鲁棒的弧样条近似,因此用于评估的数据点</p><p>必须包含噪声甚至离群点。因此,据我们所知,大多数弧样条近似算法在这种情况下都会失败,这</p><p>突显了将Song 等人<br>(2009)<br>作为对比算法的合理性,<br>以评估我们框架在算法鲁棒性方面的优劣。<br>在</p><p>图19 中,使用图16 中的数据点集对Song 等人(2009)提出的对比算法进行评估。对于尖锐几何</p><p>16<br>形状的情况(a)<br>,我们提出的框架使用4 个弧段,而Song 等人的方法使用了7 个弧段。对于锯齿</p><p>线的情况(c)<br>,两种方法都使用了7 个弧段,但我们的方法产生了更小的误差。同样,对于螺旋几</p><p>何形状的情况(d)<br>,我们的方法使用了10 个弧段,而Song 等人使用了19 个弧段。值得注意的是,</p><p>我们的算法通过减少近似相同数据点所需的弧段数量,表现出更优的性能。此外,当数据点的密度</p><p>在数据集中变化时,Song 等人的算法表现出不稳定性。由于直接从原始数据点采样用于初始弧生</p><p>成,因此对于包含大量噪声或离群点的数据集,对比算法(Song 等人,2009)面临着巨大的挑战。</p><p>图19: 使用Song 等人(2009)的算法对图16 中的数据点进行多弧近似</p><h2 id="4-5-分析"><a href="#4-5-分析" class="headerlink" title="4.5 分析"></a>4.5 分析</h2><p>在结束我们的研究之前,我们分析了我们基于可靠性的弧样条近似框架的优点和可能的局限</p><p>性。</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>• 对带噪声的数据点具有鲁棒性。<br>• 通过多个弧段实现紧凑的数据近似。</p><h2 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h2><p>• 数据点必须是有序的(排序过的)<br>。<br>• 数据点的协方差必须准确。<br>• 优化后的弧参数可能是次优解。<br>需要注意的是,所提框架的前两个缺点可以通过其他预处理算法来缓解。例如,可以通过应用</p><p>Lee(2000)中介绍的”移动最小二乘法”来对未排序的点进行排序。</p><h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5 结论"></a>5 结论</h2><p>在本研究中,我们提出了单弧和多弧近似的新型优化框架。与传统专注于最小化均方根误差</p><p>(RMSE)的方法不同,我们的方法旨在利用数据点及其协方差矩阵确定统计意义上的最优弧参数。</p><p>通过在多种数据集上的评估,验证了我们方法的有效性。正如第4.3 节所展示的,我们多弧近似框</p><p>架的一个可能应用是车辆车道地图参数化。考虑到现有的数字地图使用点和线段来表示车道数据,</p><p>17<br>我们预计在数据存储和管理方面将取得显著改进。此外,我们基于可靠性的方法有助于在从重叠行</p><p>程中收集数据后更新车道段信息,这比传统的弧样条方法具有显著优势。因此,未来的研究将涉及</p><p>在世宗市更广泛的区域内实施和评估多弧近似。</p><h2 id="作者贡献声明"><a href="#作者贡献声明" class="headerlink" title="作者贡献声明"></a>作者贡献声明</h2><p>Jinhwan Jeon:撰写——审校与编辑,撰写——初稿,可视化,验证,软件,项目管理,方法</p><p>论,调查研究,形式分析,数据整理,概念化。</p><p>Yoonjin Hwang:监督,方法论,数据整理。</p><p>Seibum B. Choi:监督。</p><h2 id="利益冲突声明"><a href="#利益冲突声明" class="headerlink" title="利益冲突声明"></a>利益冲突声明</h2><p>作者声明,他们没有任何已知的财务利益冲突或个人关系,可能会影响本文中报告工作的公正</p><p>性。</p><h2 id="数据可用性声明"><a href="#数据可用性声明" class="headerlink" title="数据可用性声明"></a>数据可用性声明</h2><p>本文中使用的所有数据均为保密数据。</p><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>本研究得到了韩国国家研究基金会<br>(NRF)<br>资助的BK21 FOUR 项目、<br>韩国教育部<br>(MOE)<br>的</p><p>支持;韩国贸易、工业和能源部(MOTIE)资助的自动驾驶技术创新项目(20018181,基于点对点</p><p>驾驶的重型卡车物流中心四级以上自动驾驶车辆平台开发)<br>;韩国产业技术振兴院(KEIT)资助的</p><p>未来汽车零部件技术开发项目(P0021036,开发一种能够在行驶中调整阻尼力的电动汽车智能减震</p><p>系统)<br>;韩国贸易、工业和能源部(MOTIE)和韩国技术advancement institute (KIAT) 资助的技</p><p>术创新项目(20014983,开发模块化车辆的自主底盘平台)<br>。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Coleman, T.F., Li, Y., 1996. An interior trust region approach for nonlinear minimization<br>subject to bounds. SIAM J. Optim. 6 (2), 418–445. <a href="https://doi.org/10.1137/0806023">https://doi.org/10.1137/0806023</a>.<br>[2] Drysdale, R., Rote, G., Sturm, A., 2008. Approximation of an open polygonal curve with a<br>minimum number of circular arcs and biarcs. Comput. Geom. 41, 31–34.<br>[3] Fischler, M.A., Bolles, R.C., 1981. Random sample consensus: a paradigm for model fitting<br>with applications to image analysis and automated cartography. Commun. ACM 24 (6), 381–</p><ol><li><a href="https://doi.org/10.1145/358669.358692">https://doi.org/10.1145/358669.358692</a>.<br>[4] Heimlich, M., Held, M., 2008. Biarc approximation, simplification and smoothing of polygonal<br>curves by means of Voronoi-based tolerance bands. Int. J. Comput. Geom. Appl. 18 (03), 221–</li><li><a href="https://doi.org/10.1142/S0218195908002593">https://doi.org/10.1142/S0218195908002593</a>.<br>18<br>[5] Hoschek, J., 1992. Circular splines. Comput. Aided Des. 24 (11), 611–618. <a href="https://doi.org/">https://doi.org/</a><br>10.1016/0010-4485(92)90072-I.<br>[6] Jee, S., Koo, T., 2003. Tool-path generation for nurbs surface machining. In: Proceedings of<br>the 2003 American Control Conference, vol. 3, pp. 2614–2619. <a href="https://doi.org/10.1109/">https://doi.org/10.1109/</a><br>ACC.2003.1243471.<br>[7] Jeon, J., 2023. Robust vehicle trajectory reconstruction and parameterized lane map generation<br>via multi-modal sensor fusion. Master’s thesis. Korea Advanced Institute of Science and<br>Technology (KAIST), Daejeon, South Korea.<br>[8] Kim, D.J., Nguyen, V.T., 2007. Reduction of high frequency excitations in a cam profile<br>by using modified smoothing spline curves. Int. J. Automot. Technol. 8 (1), 59–66. http:<br>//www.ijat.net/journal/view.php?number=396.<br>[9] Klass, R., 1983. An offset spline approximation for plane cubic splines. Comput. Aided Des.<br>15 (5), 297–299. <a href="https://doi.org/10.1016/0010-4485(83)90019-2">https://doi.org/10.1016/0010-4485(83)90019-2</a>.<br>[10] Lee, I.-K., 2000. Curve reconstruction from unorganized points. Comput. Aided Geom. Des.<br>17 (2), 161–177. <a href="https://doi.org/10.1016/S0167-8396(99)00044-8">https://doi.org/10.1016/S0167-8396(99)00044-8</a>.<br>[11] Madsen, K., Nielsen, H., Tingleff, O., 2004. Methods for Non-Linear Least Squares Problems,<br>2nd ed. Technical University of Denmark.<br>[12] Maier, G., 2014. Optimal arc spline approximation. Comput. Aided Geom. Des. 31 (5), 211–</li><li><a href="https://doi.org/10.1016/j.cagd.2014.02.011">https://doi.org/10.1016/j.cagd.2014.02.011</a>.<br>[13] Meek, D., Walton, D., 1992. Approximation of discrete data by G1 arc splines. Comput. Aided<br>Des. 24 (6), 301–306. <a href="https://doi.org/10.1016/0010-4485(92)90047-E">https://doi.org/10.1016/0010-4485(92)90047-E</a>.<br>[14] Meek, D., Walton, D., 1995. Approximating smooth planar curves by arc splines. J. Comput.<br>Appl. Math. 59 (2), 221–231. <a href="https://doi.org/10.1016/0377-0427(94)00029-Z">https://doi.org/10.1016/0377-0427(94)00029-Z</a>.<br>[15] Pearson, K., 1900. On the criterion that a given system of deviations from the probable in<br>the case of a correlated system of variables is such that it can be reasonably supposed to have<br>arisen from random sampling. Lond. Edinb. Dublin Philos. Mag. J. Sci. 50 (302), 157–175.<br><a href="https://doi.org/10.1080/147864400094">https://doi.org/10.1080/147864400094</a>.<br>[16] Piegl, L., Tiller, W., 1987. Curve and surface constructions using rational b-splines. Comput.<br>Aided Des. 19 (9), 485–498. <a href="https://doi.org/10.1016/0010-4485(87)90234-X">https://doi.org/10.1016/0010-4485(87)90234-X</a>.<br>[17] Piegl, L., Tiller, W., 2002. Data approximation using biarcs. Eng. Comput. 18, 59–65. https:<br>//doi.org/10.1007/s003660200005.<br>[18] Schindler, A., Maier, G., Pangerl, S., 2011. Exploiting arc splines for digital maps. In: 2011<br>14th International IEEE Conference on Intelligent Transportation Systems (ITSC), pp. 1–6.<br>[19] Schindler, A., Maier, G., Janda, F., 2012. Generation of high precision digital maps using<br>circular arc splines. In: 2012 IEEE Intelligent Vehicles Symposium, pp. 246–251.<br>19<br>[20] Song, X., Aigner, M., Chen, F., Jüttler, B., 2009. Circular spline fitting using an evolution<br>process. J. Comput. Appl. Math. 231 (1), 423–433. <a href="https://doi.org/10.1016/j.cam.2009">https://doi.org/10.1016/j.cam.2009</a>.<br>03.002.<br>[21] The MathWorks Inc., 2023. lsqnonlin: nonlinear least squares solver. <a href="https://kr.mathworks">https://kr.mathworks</a>.<br>com/help/optim/ug/lsqnonlin.html.<br>[22] Yang, S.-N., Du, W.-C., 1996. Numerical methods for approximating digitized curves by piece-<br>wise circular arcs. J. Comput. Appl. Math. 66 (1), 557–569. <a href="https://doi.org/10.1016/">https://doi.org/10.1016/</a><br>0377-0427(95)00191-3.<br>20</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二维点-法线对的细分 </tag>
            
            <tag> 贝塞尔准平均 </tag>
            
            <tag> 二维曲线设计 </tag>
            
            <tag> 改进的 Lane-Riesenfeld 算法 </tag>
            
            <tag> 改进的四点方案 </tag>
            
            <tag> 有障碍物环境中的细分 </tag>
            
            <tag> 机器人路径平滑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Semantic_Human_Matting</title>
      <link href="/2024/03/23/Semantic_Human_Matting/"/>
      <url>/2024/03/23/Semantic_Human_Matting/</url>
      
        <content type="html"><![CDATA[<h1 id="项目面试回答指南"><a href="#项目面试回答指南" class="headerlink" title="项目面试回答指南"></a>项目面试回答指南</h1><h2 id="一、项目概述"><a href="#一、项目概述" class="headerlink" title="一、项目概述"></a>一、项目概述</h2><p>该项目是一个端到端的图像处理网络，主要由三个部分组成：T_Net（用于生成trimap）、M_Net（用于图像抠图）以及将两者结合的端到端网络。以下是各部分的详细回答建议：</p><h2 id="二、模块功能"><a href="#二、模块功能" class="headerlink" title="二、模块功能"></a>二、模块功能</h2><h3 id="（一）T-Net（T-mv2-unet）"><a href="#（一）T-Net（T-mv2-unet）" class="headerlink" title="（一）T_Net（T_mv2_unet）"></a>（一）T_Net（T_mv2_unet）</h3><p><strong>功能</strong>：<br>T_Net的主要功能是生成trimap，即对输入图像进行初步的分割，将图像分为背景、前景和不确定区域。这是后续抠图过程的重要基础。</p><p><strong>网络结构</strong>：</p><ul><li><strong>编码器</strong>：基于MobileNetV2的结构，通过多个InvertedResidual模块对输入图像进行特征提取，逐步下采样得到不同层级的特征图。</li><li><strong>解码器</strong>：采用U-Net的上采样结构，将编码器得到的特征图逐步上采样，最终生成trimap。</li></ul><p><strong>输入输出</strong>：</p><ul><li><strong>输入</strong>：待处理的原始图像。</li><li><strong>输出</strong>：trimap，包含背景、前景和不确定区域的分割结果。</li></ul><h3 id="（二）M-Net"><a href="#（二）M-Net" class="headerlink" title="（二）M_Net"></a>（二）M_Net</h3><p><strong>功能</strong>：<br>M_Net的主要功能是根据输入图像和trimap，预测出图像的alpha通道，即透明度信息，实现图像的精细抠图。</p><p><strong>网络结构</strong>：</p><ul><li><strong>编码器</strong>：通过多个卷积层和最大池化层对输入数据进行特征提取和下采样，逐步减少特征图的尺寸，增加通道数，提取更高级的特征。</li><li><strong>解码器</strong>：使用转置卷积层对编码器得到的特征图进行上采样，逐步恢复特征图的尺寸，最终得到与输入图像大小相同的alpha通道预测结果。</li></ul><p><strong>输入输出</strong>：</p><ul><li><strong>输入</strong>：原始图像和trimap的拼接结果。</li><li><strong>输出</strong>：预测的alpha通道，表示图像中每个像素的透明度。</li></ul><h3 id="（三）端到端网络"><a href="#（三）端到端网络" class="headerlink" title="（三）端到端网络"></a>（三）端到端网络</h3><p><strong>功能</strong>：<br>将T_Net和M_Net结合起来，实现从输入图像到最终抠图结果的完整流程。</p><p><strong>网络结构</strong>：</p><ul><li><strong>T_Net部分</strong>：先生成trimap。</li><li><strong>M_Net部分</strong>：利用原始图像和生成的trimap，预测alpha通道。</li><li><strong>融合模块</strong>：将trimap和alpha通道进行融合，得到最终的抠图结果。</li></ul><p><strong>输入输出</strong>：</p><ul><li><strong>输入</strong>：待处理的原始图像。</li><li><strong>输出</strong>：抠图后的图像，包含alpha通道信息。</li></ul><h2 id="三、技术细节"><a href="#三、技术细节" class="headerlink" title="三、技术细节"></a>三、技术细节</h2><h3 id="（一）网络设计"><a href="#（一）网络设计" class="headerlink" title="（一）网络设计"></a>（一）网络设计</h3><ul><li><strong>T_Net</strong>：<ul><li>采用MobileNetV2的轻量级结构，兼顾计算效率和模型性能。</li><li>在解码器部分使用U-Net的上采样方式，结合跳跃连接，保留图像的细节信息。</li></ul></li><li><strong>M_Net</strong>：<ul><li>编码器-解码器结构能够有效捕捉图像的上下文信息。</li><li>在解码器中使用转置卷积进行上采样，避免了传统 interpolation 方法可能带来的棋盘效应。</li></ul></li></ul><h3 id="（二）损失函数"><a href="#（二）损失函数" class="headerlink" title="（二）损失函数"></a>（二）损失函数</h3><ul><li><strong>T_Net</strong>：可以使用交叉熵损失，衡量生成的trimap与真实trimap之间的差异。</li><li><strong>M_Net</strong>：采用L1损失或SSIM损失，评估预测的alpha通道与真实alpha通道之间的相似度。</li></ul><h3 id="（三）优化方法"><a href="#（三）优化方法" class="headerlink" title="（三）优化方法"></a>（三）优化方法</h3><ul><li>使用Adam优化器，设置适当的学习率和权重衰减，加速模型收敛并防止过拟合。</li><li>在训练过程中，采用数据增强技术，如随机裁剪、翻转等，增加数据的多样性，提升模型的泛化能力。</li></ul><h2 id="四、项目亮点"><a href="#四、项目亮点" class="headerlink" title="四、项目亮点"></a>四、项目亮点</h2><h3 id="（一）性能优势"><a href="#（一）性能优势" class="headerlink" title="（一）性能优势"></a>（一）性能优势</h3><ul><li><strong>高效性</strong>：T_Net采用轻量级的MobileNetV2结构，减少了计算量，提高了处理速度。</li><li><strong>准确性</strong>：M_Net的编码器-解码器结构能够有效捕捉图像细节，生成更精确的alpha通道。</li></ul><h3 id="（二）创新点"><a href="#（二）创新点" class="headerlink" title="（二）创新点"></a>（二）创新点</h3><ul><li><strong>端到端架构</strong>：将trimap生成和抠图两个过程结合起来，简化了传统两步走的流程，提高了整体效率。</li><li><strong>融合模块</strong>：通过特定的融合方式，将trimap和alpha通道的信息进行有效整合，提升了最终抠图结果的质量。</li></ul><h2 id="五、应用场景"><a href="#五、应用场景" class="headerlink" title="五、应用场景"></a>五、应用场景</h2><p>该项目在图像编辑、影视后期制作、虚拟现实等领域具有广泛的应用前景。例如，在图像编辑中，可以快速准确地将人物或物体从背景中分离出来，进行合成或特效处理；在影视后期制作中，用于抠像技术，实现演员在不同场景中的切换；在虚拟现实应用中，实时抠图可以增强用户的沉浸感和交互体验。</p><h2 id="六、遇到的挑战与解决方案"><a href="#六、遇到的挑战与解决方案" class="headerlink" title="六、遇到的挑战与解决方案"></a>六、遇到的挑战与解决方案</h2><h3 id="（一）数据不平衡问题"><a href="#（一）数据不平衡问题" class="headerlink" title="（一）数据不平衡问题"></a>（一）数据不平衡问题</h3><p><strong>挑战</strong>：在训练数据中，背景、前景和不确定区域的像素数量可能存在较大差异，导致模型对某些类别学习不足。<br><strong>解决方案</strong>：采用加权交叉熵损失，对不同类别的像素赋予不同的权重，平衡数据分布对模型训练的影响。</p><h3 id="（二）模型过拟合问题"><a href="#（二）模型过拟合问题" class="headerlink" title="（二）模型过拟合问题"></a>（二）模型过拟合问题</h3><p><strong>挑战</strong>：在有限的训练数据下，模型可能会过拟合，导致在测试数据上表现不佳。<br><strong>解决方案</strong>：</p><ul><li>增加数据增强操作，扩大有效数据规模。</li><li>在网络中添加dropout层，防止过拟合。</li><li>调整模型的复杂度，避免过于复杂的网络结构。</li></ul><h3 id="（三）计算资源限制"><a href="#（三）计算资源限制" class="headerlink" title="（三）计算资源限制"></a>（三）计算资源限制</h3><p><strong>挑战</strong>：训练整个端到端网络需要较大的计算资源，尤其是在处理高分辨率图像时。<br><strong>解决方案</strong>：</p><ul><li>采用渐进式训练策略，先训练T_Net，再训练M_Net，最后进行端到端的联合训练，减少同时训练的参数量。</li><li>利用分布式训练或混合精度训练等技术，提高训练效率，降低对单机计算资源的要求。</li></ul><h2 id="七、未来改进方向"><a href="#七、未来改进方向" class="headerlink" title="七、未来改进方向"></a>七、未来改进方向</h2><ol><li><strong>模型压缩与优化</strong>：进一步优化网络结构，减少参数量和计算量，提高模型的运行效率，使其更适合在移动设备或嵌入式系统上部署。</li><li><strong>多任务学习</strong>：探索将更多的任务（如语义分割、边缘检测等）与抠图任务结合，通过多任务学习提升模型对图像的理解能力，进一步提高抠图质量。</li><li><strong>实时性增强</strong>：针对实时应用场景，研究更高效的算法和优化策略，降低模型的推理时间，实现对视频流的实时抠图处理。</li><li><strong>自监督学习</strong>：利用自监督学习方法，减少对大量标注数据的依赖，降低数据获取成本，同时提升模型的泛化能力，使其在不同领域和场景下都能取得良好的性能。</li></ol><h2 id="八、M-Net项目"><a href="#八、M-Net项目" class="headerlink" title="八、M_Net项目"></a>八、M_Net项目</h2><h3 id="1-网络结构"><a href="#1-网络结构" class="headerlink" title="1. 网络结构"></a>1. 网络结构</h3><p>M_Net是一个典型的编码器-解码器结构，用于图像抠图任务。编码器部分通过卷积层和最大池化层逐步下采样，提取图像的高级特征；解码器部分通过转置卷积层逐步上采样，恢复特征图的尺寸，最终预测出alpha通道。</p><h3 id="2-数学逻辑"><a href="#2-数学逻辑" class="headerlink" title="2. 数学逻辑"></a>2. 数学逻辑</h3><ul><li><p><strong>卷积操作</strong>：卷积层通过滑动窗口对输入特征图进行线性变换，提取局部特征。数学上，卷积可以表示为：</p><script type="math/tex; mode=display">(I * K)(x, y) = \sum_{i} \sum_{j} I(x+i, y+j) \cdot K(i, j)</script><p>其中，(I) 是输入特征图，(K) 是卷积核，((x, y)) 是输出特征图的位置。</p></li><li><p><strong>Batch Normalization</strong>：对卷积层的输出进行归一化处理，加速网络收敛并稳定训练。数学上，Batch Normalization 的前向传播公式为：</p><script type="math/tex; mode=display">y_i = \gamma \cdot \frac{x_i - \mu_B}{\sqrt{\sigma_B^2 + \epsilon}} + \beta</script><p>其中，(\mu_B) 和 (\sigma_B^2) 是 mini-batch 的均值和方差，(\gamma) 和 (\beta) 是学习参数，(\epsilon) 是防止除零的常数。</p></li><li><p><strong>ReLU激活函数</strong>：引入非线性，增强网络的表达能力。数学上，ReLU 函数定义为：</p><script type="math/tex; mode=display">f(x) = \max(0, x)</script></li><li><p><strong>最大池化</strong>：通过选取窗口内的最大值进行下采样，减少特征图的尺寸，增强网络的鲁棒性。数学上，最大池化可以表示为：</p><script type="math/tex; mode=display">y_{i,j} = \max_{(x,y) \in \text{窗口}} I(x, y)</script></li><li><p><strong>转置卷积</strong>：用于解码器部分的上采样操作，通过学习逆过程来恢复特征图的尺寸。数学上，转置卷积可以看作是卷积的逆操作，其输出大小由步长、填充和卷积核大小决定。</p></li></ul><h2 id="九、T-Net项目"><a href="#九、T-Net项目" class="headerlink" title="九、T_Net项目"></a>九、T_Net项目</h2><h3 id="1-网络结构-1"><a href="#1-网络结构-1" class="headerlink" title="1. 网络结构"></a>1. 网络结构</h3><p>T_Net基于MobileNetV2和U-Net结构，用于生成trimap。编码器部分采用MobileNetV2的Inverted Residual模块，逐步下采样提取特征；解码器部分采用U-Net的上采样结构，结合跳跃连接，恢复特征图的尺寸并生成trimap。</p><h3 id="2-数学逻辑-1"><a href="#2-数学逻辑-1" class="headerlink" title="2. 数学逻辑"></a>2. 数学逻辑</h3><ul><li><p><strong>Inverted Residual模块</strong>：与传统残差模块不同，先通过逐点卷积扩展通道数，再通过深度可分离卷积进行特征提取，最后通过逐点卷积减少通道数。数学上，Inverted Residual模块的前向传播可以表示为：</p><script type="math/tex; mode=display">\text{输出} = \text{逐点卷积}(\text{ReLU6}(\text{深度可分离卷积}(\text{逐点卷积}(x))))</script><p>其中，(\text{ReLU6}) 是限制在 [0, 6] 范围内的激活函数。</p></li><li><p><strong>跳跃连接</strong>：在解码器部分，将编码器中不同层级的特征图进行融合，保留图像的细节信息。数学上，跳跃连接可以表示为：</p><script type="math/tex; mode=display">y = \text{上采样}(x_{\text{高层}}) + x_{\text{低层}}</script><p>其中，(x<em>{\text{高层}}) 是编码器中高层的特征图，(x</em>{\text{低层}}) 是编码器中低层的特征图。</p></li></ul><h2 id="十、端到端网络项目"><a href="#十、端到端网络项目" class="headerlink" title="十、端到端网络项目"></a>十、端到端网络项目</h2><h3 id="1-网络结构-2"><a href="#1-网络结构-2" class="headerlink" title="1. 网络结构"></a>1. 网络结构</h3><p>端到端网络将T_Net和M_Net结合起来，实现从输入图像到最终抠图结果的完整流程。T_Net生成trimap，M_Net利用原始图像和trimap预测alpha通道，最后通过融合模块得到最终的抠图结果。</p><h3 id="2-数学逻辑-2"><a href="#2-数学逻辑-2" class="headerlink" title="2. 数学逻辑"></a>2. 数学逻辑</h3><ul><li><p><strong>融合模块</strong>：将trimap和alpha通道进行融合，得到最终的抠图结果。数学上，融合公式可以表示为：</p><script type="math/tex; mode=display">\alpha_p = \text{fg} + \text{unsure} \cdot \alpha_r</script><p>其中，(\text{fg}) 是前景部分，(\text{unsure}) 是不确定区域，(\alpha_r) 是M_Net预测的alpha通道。</p></li><li><p><strong>softmax激活函数</strong>：在T_Net的输出层使用softmax激活函数，将trimap的每个像素分类为背景、前景或不确定区域。数学上，softmax函数定义为：</p><script type="math/tex; mode=display">\text{softmax}(x_i) = \frac{e^{x_i}}{\sum_j e^{x_j}}</script><p>其中，(x_i) 是输入的 logits 值。</p></li><li><p><strong>损失函数</strong>：T_Net使用交叉熵损失，衡量生成的trimap与真实trimap之间的差异；M_Net使用L1损失或SSIM损失，评估预测的alpha通道与真实alpha通道之间的相似度。交叉熵损失的数学公式为：</p><script type="math/tex; mode=display">\mathcal{L}_{\text{CE}} = -\sum_{i} y_i \log(p_i)</script><p>其中，(y_i) 是真实标签，(p_i) 是预测概率。L1损失的公式为：</p><script type="math/tex; mode=display">\mathcal{L}_{\text{L1}} = \sum_{i} |y_i - \hat{y}_i|</script><p>其中，(y_i) 是真实值，(\hat{y}_i) 是预测值。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目经验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>点-法线对的细分及其在平滑可行机器人路径中的应用</title>
      <link href="/2024/03/23/%E7%82%B9-%E6%B3%95%E7%BA%BF%E5%AF%B9%E7%9A%84%E7%BB%86%E5%88%86%E5%8F%8A%E5%85%B6%E5%9C%A8%E5%B9%B3%E6%BB%91%E5%8F%AF%E8%A1%8C%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%B7%AF%E5%BE%84%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>/2024/03/23/%E7%82%B9-%E6%B3%95%E7%BA%BF%E5%AF%B9%E7%9A%84%E7%BB%86%E5%88%86%E5%8F%8A%E5%85%B6%E5%9C%A8%E5%B9%B3%E6%BB%91%E5%8F%AF%E8%A1%8C%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%B7%AF%E5%BE%84%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="阅前必看"><a href="#阅前必看" class="headerlink" title="阅前必看"></a>阅前必看</h2><p>重点提醒，本文是一段blog的填充字符，文档来源于本人翻译的一篇论文，请不要对本人的内容有任何二次使用，否则后果与本人无关</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>本文针对二维点-法线对的细分问题，提出了一种新的平均方法，并基于此开发了改进的细分算法。这些算法能够生成极限曲线及其法线，且极限法线是极限曲线的法线，解决了以往方案中极限法线与曲线不匹配的问题。此外，还展示了这些算法在平滑预计算的可行多边形机器人路径中的应用。</p><h2 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h2><p>二维点-法线对的细分，贝塞尔准平均，二维曲线设计，改进的 Lane-Riesenfeld 算法，改进的四点方案，有障碍物环境中的细分，机器人路径平滑</p><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h2><p>细分方案在计算机图形学和计算机辅助几何设计中得到了广泛应用。传统的线性细分方案主要处理顶点网格，而随着研究的深入，开始涉及更多类型的几何对象，如点集、流形值数据等。本文聚焦于点-法线对的细分，旨在提供一种新的算法族，使得生成的极限法线成为极限曲线的法线，同时考虑如何在有障碍物的环境中生成平滑曲线。</p><h2 id="3-贝塞尔准平均"><a href="#3-贝塞尔准平均" class="headerlink" title="3 贝塞尔准平均"></a>3 贝塞尔准平均</h2><h3 id="3-1-算法A"><a href="#3-1-算法A" class="headerlink" title="3.1 算法A"></a>3.1 算法A</h3><p>给定两对点-法线对 P0 = (p0, n0) 和 P1 = (p1, n1)，生成新的点-法线对 Pω = (pω, nω)。构造辅助的三次贝塞尔曲线，插值两个给定点-法线对，并在参数 ω 处采样得到 Pω。具体步骤如下：</p><ol><li>设 c0 = p0，c3 = p1。</li><li>计算 d0 为法线 n0 顺时针旋转 π/2 的结果，d1 为法线 n1 逆时针旋转 π/2 的结果。</li><li>设 θ 为法线 n0 和 n1 之间的夹角。计算 ℓ = |p0p1| * 3 cos²θ / 4。</li><li>设 ci = pi−1 + ℓdi−1, i = 1, 2。</li><li>在参数 ω 处采样由 ci, i = 0, . . . , 3 定义的贝塞尔曲线，得到点 pω 和法线 nω。</li></ol><h3 id="3-2-定理2"><a href="#3-2-定理2" class="headerlink" title="3.2 定理2"></a>3.2 定理2</h3><p>算法A中辅助贝塞尔曲线的控制多边形没有自交。证明过程涉及构造两条直线L0和L1，分别通过点P0和P1，方向为d0和d1。通过分析三角形关系和角度关系，证明控制多边形的线段不会相交。</p><h2 id="4-修改后的细分方案"><a href="#4-修改后的细分方案" class="headerlink" title="4 修改后的细分方案"></a>4 修改后的细分方案</h2><h3 id="4-1-修改方案的示例"><a href="#4-1-修改方案的示例" class="headerlink" title="4.1 修改方案的示例"></a>4.1 修改方案的示例</h3><h4 id="4-1-1-Modified-Lane-Riesenfeld-algorithm"><a href="#4-1-1-Modified-Lane-Riesenfeld-algorithm" class="headerlink" title="4.1.1 Modified Lane-Riesenfeld algorithm"></a>4.1.1 Modified Lane-Riesenfeld algorithm</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Require: m ∈ N0, Pi = (pi, ni), i ∈ Z.</span><br><span class="line">for i ∈ Z do</span><br><span class="line">P0 i ← Pi end for</span><br><span class="line">for j = 1, 2, . . . , do</span><br><span class="line">for i ∈ Z do</span><br><span class="line">Pj,0 2i ← P j−1 i ▷ elementary refinement step</span><br><span class="line">Pj,0 2i+1 ← BQA 1/2 (P j−1 i , P j−1 i+1 )</span><br><span class="line">end for</span><br><span class="line">for k = 1, . . . , m − 1 do</span><br><span class="line">for i ∈ Z do</span><br><span class="line">P j,k i ← BQA 1/2 (P j,k−1 i , Pj,k−1 i+1 ) ▷ smoothing step</span><br><span class="line">end for</span><br><span class="line">end for</span><br><span class="line">for i ∈ Z do</span><br><span class="line">Pj i ← P j,m−1 i ▷ result of current iteration</span><br><span class="line">end for</span><br><span class="line">end for</span><br></pre></td></tr></table></figure><h3 id="4-1-2-Modified-4-point-scheme"><a href="#4-1-2-Modified-4-point-scheme" class="headerlink" title="4.1.2 Modified 4-point scheme"></a>4.1.2 Modified 4-point scheme</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Require: Pi = (pi, ni), i ∈ Z.</span><br><span class="line">for i ∈ Z do</span><br><span class="line">P0 i ← Pi end for</span><br><span class="line">for j = 1, 2, . . . , do</span><br><span class="line">for i ∈ Z do</span><br><span class="line">Pj 2i ← P j−1 i SL ← BQA−1/8 (P j−1 i , Pj−1 i−1 )</span><br><span class="line">SR ← BQA−1/8(P j−1 i+1 , P j−1 i+2 )</span><br><span class="line">Pj 2i+1 ← BQA 1/2 (SL, SR)</span><br><span class="line">end for</span><br><span class="line">end for</span><br></pre></td></tr></table></figure><h2 id="5-机器人路径平滑"><a href="#5-机器人路径平滑" class="headerlink" title="5 机器人路径平滑"></a>5 机器人路径平滑</h2><h3 id="5-3-适应障碍物的平均方法"><a href="#5-3-适应障碍物的平均方法" class="headerlink" title="5.3 适应障碍物的平均方法"></a>5.3 适应障碍物的平均方法</h3><p>在算法A的基础上，增加步骤4.1，检查控制点之间的线段是否与障碍物边界存在交点。如果是，则将控制点设置为最近的交点。这确保了生成的路径在自由空间中避开障碍物。</p><h3 id="5-4-测量离散平滑性"><a href="#5-4-测量离散平滑性" class="headerlink" title="5.4 测量离散平滑性"></a>5.4 测量离散平滑性</h3><p>通过计算细分多边形的每三个连续顶点的圆的半径，估计顶点处的离散曲率。绘制离散曲率图和一阶导数图，评估路径的平滑性。</p><h2 id="6-结论"><a href="#6-结论" class="headerlink" title="6 结论"></a>6 结论</h2><p>本文改进了点-法线对的细分方法，提出了新的贝塞尔准平均算法，并基于此修改了Lane-Riesenfeld算法和四点方案。这些改进后的算法生成的极限法线是极限曲线的法线，且生成的曲线具有G1连续性。通过在机器人路径平滑中的应用，展示了算法在处理有障碍物环境时的有效性。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二维点-法线对的细分 </tag>
            
            <tag> 贝塞尔准平均 </tag>
            
            <tag> 二维曲线设计 </tag>
            
            <tag> 改进的 Lane-Riesenfeld 算法 </tag>
            
            <tag> 改进的四点方案 </tag>
            
            <tag> 有障碍物环境中的细分 </tag>
            
            <tag> 机器人路径平滑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量化面经</title>
      <link href="/2024/03/23/%E9%87%8F%E5%8C%96%E9%9D%A2%E7%BB%8F/"/>
      <url>/2024/03/23/%E9%87%8F%E5%8C%96%E9%9D%A2%E7%BB%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="行为面试问题及回答建议"><a href="#行为面试问题及回答建议" class="headerlink" title="行为面试问题及回答建议"></a>行为面试问题及回答建议</h1><h2 id="案例问题-1：介绍一下自己（自我介绍）"><a href="#案例问题-1：介绍一下自己（自我介绍）" class="headerlink" title="案例问题 1：介绍一下自己（自我介绍）"></a>案例问题 1：介绍一下自己（自我介绍）</h2><p><strong>回答建议</strong>：<br>专业+课程成绩+编程语言+获奖经历+项目+兴趣和目标</p><p>尊敬的面试官，您好！我叫王星宇，毕业于浙江大学数学与应用数学专业。我在数学分析、概率论等课程中取得了优异的成绩，具备扎实的数学基础。同时，我熟悉 Python、R、Matlab 等编程语言，并在多个项目中积累了丰富的实践经验。我对量化研究非常感兴趣，尤其是通过数学建模和编程实现来解决实际问题。我了解到浙江玉皇山南私募基金管理有限公司在量化投资领域有着卓越的成就和先进的技术，我相信我的数学背景和编程能力能够为贵公司带来价值，同时也期待在贵公司进一步提升自己，实现职业发展。</p><h2 id="重点案例问题-2：你了解我们公司或了解我们这个岗位吗？"><a href="#重点案例问题-2：你了解我们公司或了解我们这个岗位吗？" class="headerlink" title="重点案例问题 2：你了解我们公司或了解我们这个岗位吗？"></a>重点案例问题 2：你了解我们公司或了解我们这个岗位吗？</h2><p><strong>回答建议</strong>：<br>是的，我了解贵公司。浙江玉皇山南私募基金管理有限公司在量化投资领域有着良好的声誉和突出的业绩。我注意到贵公司在量化策略研发和风险管理方面有着独特的优势，尤其是在利用先进的数学模型和算法进行投资决策方面。我了解到这个岗位需要具备扎实的数学基础和编程能力，这与我的专业背景非常契合。我对量化行业非常感兴趣，尤其是贵公司注重技术与金融的结合，这让我看到了自己职业发展的广阔空间。我相信我的技能和热情能够让我在贵公司发挥价值。</p><h2 id="重点案例问题-3：你之前对金融了解多少？对量化业务了解多少？你为什么选择量化行业？"><a href="#重点案例问题-3：你之前对金融了解多少？对量化业务了解多少？你为什么选择量化行业？" class="headerlink" title="重点案例问题 3：你之前对金融了解多少？对量化业务了解多少？你为什么选择量化行业？"></a>重点案例问题 3：你之前对金融了解多少？对量化业务了解多少？你为什么选择量化行业？</h2><p><strong>回答建议</strong>：<br>虽然我不是金融专业出身，但我对金融领域一直保持着浓厚的兴趣。在学习数学和编程的过程中，我逐渐了解到量化投资是一种将数学、统计学和计算机技术相结合的金融领域。我通过阅读相关书籍和论文，了解到量化投资的核心是通过数学模型和算法来预测市场趋势和寻找交易机会。我选择量化行业，一方面是因为我对数学和编程的热爱，这些技能在量化投资中能够得到充分的发挥；另一方面，量化投资的高效性和科学性吸引了我，我相信这是一个充满挑战和机遇的领域，能够让我不断提升自己。</p><h2 id="案例问题-4：过往中的成功或失败的案例？"><a href="#案例问题-4：过往中的成功或失败的案例？" class="headerlink" title="案例问题 4：过往中的成功或失败的案例？"></a>案例问题 4：过往中的成功或失败的案例？</h2><p><strong>回答建议</strong>：<br>在过往的项目中，我有一个成功案例是语义图像分割项目。在这个项目中，我负责提出源代码优化意见，调整神经网络结构和特定参数。通过我的努力，模型的平均交并比从 75% 提升至 80%。这个过程中，我学会了如何通过数据分析和模型优化来解决实际问题，也锻炼了我的编程能力和团队协作能力。虽然过程中遇到了很多困难，但我始终坚持不懈，最终取得了令人满意的结果。</p><h2 id="案例问题-5：对于加班-工作强度的看法？"><a href="#案例问题-5：对于加班-工作强度的看法？" class="headerlink" title="案例问题 5：对于加班/工作强度的看法？"></a>案例问题 5：对于加班/工作强度的看法？</h2><p><strong>回答建议</strong>：<br>我理解量化行业的特殊性，工作强度可能会比较大。但我相信，通过提高工作效率，可以在常规工作时间内完成大部分任务。当然，如果遇到有价值的项目或者紧急的核心任务，我愿意投入更多的时间和精力。我认为加班本身不是目的，而是为了更好地完成任务，提升自己的能力和价值。我会合理安排时间，确保在高效率的前提下，能够应对高强度的工作。</p><h2 id="重点案例问题-6：个人优缺点有哪些？"><a href="#重点案例问题-6：个人优缺点有哪些？" class="headerlink" title="重点案例问题 6：个人优缺点有哪些？"></a>重点案例问题 6：个人优缺点有哪些？</h2><p><strong>回答建议</strong>：<br>我的优点是具备扎实的数学基础和较强的编程能力，这让我在解决复杂问题时能够快速找到解决方案。同时，我善于学习新知识，能够快速适应新环境和新任务。我的缺点是有时候过于追求完美，可能会在一些细节上花费过多时间。但我正在努力改进这一点，通过合理安排时间，确保在追求高质量的同时，也能提高工作效率。</p><h2 id="案例问题-7：兴趣爱好有什么？"><a href="#案例问题-7：兴趣爱好有什么？" class="headerlink" title="案例问题 7：兴趣爱好有什么？"></a>案例问题 7：兴趣爱好有什么？</h2><p><strong>回答建议</strong>：<br>我非常喜欢数据分析和阅读科技类书籍。通过数据分析，我能够发现数据背后的规律和价值，这让我感到非常兴奋。同时，阅读科技类书籍和论文帮助我保持对行业动态的敏感度，了解最新的技术和趋势。这些兴趣爱好不仅丰富了我的知识储备，也让我在团队中能够更好地与同事交流和协作。</p><h2 id="案例问题-8：离职原因-求职动机是什么？"><a href="#案例问题-8：离职原因-求职动机是什么？" class="headerlink" title="案例问题 8：离职原因/求职动机是什么？"></a>案例问题 8：离职原因/求职动机是什么？</h2><p><strong>回答建议</strong>：<br>我目前正处于毕业季，正在寻找一份能够充分发挥我的专业技能和兴趣的工作。我对量化行业非常感兴趣，尤其是贵公司在量化投资领域的领先地位和技术实力。我相信在贵公司，我能够找到一个适合自己发展的平台，不断提升自己的能力和价值。我的求职动机是希望能够加入一个充满挑战和机遇的团队，实现自己的职业目标。</p><h2 id="重点案例问题-9：有无其他面试或者手上是否有-offer？"><a href="#重点案例问题-9：有无其他面试或者手上是否有-offer？" class="headerlink" title="重点案例问题 9：有无其他面试或者手上是否有 offer？"></a>重点案例问题 9：有无其他面试或者手上是否有 offer？</h2><p><strong>回答建议</strong>：<br>目前我正在积极寻找机会，也参加了一些面试，基本还是（本行业）。但我对贵公司非常感兴趣，贵公司在量化领域的声誉和技术实力让我印象深刻。我相信贵公司能够为我提供一个更好的发展平台，因此我非常希望能够加入贵公司。</p><h2 id="案例问题-10：你对薪资的期望？"><a href="#案例问题-10：你对薪资的期望？" class="headerlink" title="案例问题 10：你对薪资的期望？"></a>案例问题 10：你对薪资的期望？</h2><p><strong>回答建议</strong>：<br>我对薪资没有绝对的硬性要求，我更看重的是个人成长和职业发展的机会。当然，我也希望薪资能够与市场水平相符，体现我的能力和价值。如果贵公司能够提供一个具有竞争力的薪资待遇，我将非常感激。我相信通过我的努力，我能够为公司创造更多的价值。</p><h2 id="案例问题-11：你入职后准备如何开展自己的工作？"><a href="#案例问题-11：你入职后准备如何开展自己的工作？" class="headerlink" title="案例问题 11：你入职后准备如何开展自己的工作？"></a>案例问题 11：你入职后准备如何开展自己的工作？</h2><p><strong>回答建议</strong>：<br>如果我有幸入职，我会首先尽快了解公司的业务流程和团队结构，熟悉相关同事和上下游合作部门的情况。我会与导师确认阶段性的考核目标，尤其是试用期的目标，并制定详细的工作计划。我会积极参与团队项目，通过实践不断提升自己的能力，为团队贡献自己的力量。</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
